RUTA A SEGUIR EN EL PROYECTO DE RIGO



COSAS PENDIENTES:
	-Nueva cosa a revisar , lo de que al poner la ruta http://localhost:4200/viajes me saque la tabla y revisra el flujo de la palicacion hacia atras y hacia delante
	-Volver a poner lo  de por defecto en el registro el rol ROL_USER
	-poner algo para que dependiendo el tipo de rol del usuario , pues pueda o no borrar usuarios
	-reevisar el registro por que se pueden crear usuarios vacios ejemplo id 13
	-tengo que implementar un boton para volver atras en las pantallas de ver viajes
	
	
	
	
	REVISAR ESTO EN UN FUTUTO,-->vale , lo unico me acabo de dar cuenta de un eeror que no se como solucionar ,yo en mi aplicacion al logearme me genera un token y ese toquen tiene aceso a todos los usuarios , 
				a mi me gustaria es que al logearme con un usuario solo tuviera aceso a los datos de ese usuario



COSAS LISTAS:

	REVISAR EL METODO EDITAR ESTA GUARDANDO NUEVAS EN VEZ DE EDITARLAS -->  ya actualiza bien -->LISTO


	el registro de nuevo usuario web funciona falta darle aspecto al igual que al login.-->LISTO
	cosas a revisar: -->LISTO
					- en el regsitro ver que datos le paso y que cuando se haya regsitrado saque un mensaje o algo -->LISTO
					- Intentar debugear en inteljide el backend por que ahora mismo no me acuerdo como se guardaban los usuarios y demas.-->LISTO
	nueva idea , despues de la pantalla de login que te saque  las empresas que tienes disponibles y desde ahi ya te lleve a los viajes de cada empresa
				--> tengo que crear un endpoin que saque las empresas segun un ide de usuario -->LISTO
				revisar que funciona en el fronted lo del nuevo endpoint: no lo saca revisar el fronted -->LISTO
	tengo que crear el endpoint para sacar los viajes de una empresa -->LISTO
				Revisar por que no saca los viajes de una empresa , en la ruta viene bien el id de la empresa pero luego intenta sacar los viajes de la empresa 0 -->LISTO
					
	crear empresas --> LISTO
	modificar y eliminar empresas, ver mas abajo la idea de como va colocado-->LISTO
				 repsar el codigo css y el html enteros por que falla en la tabla , puedo intetnar hacrlo desde el principio -->LISTO
				 
	-Ahora estoy corriginedo una cosa en el backend para crear datos de prueba ,falta meter datos de prueba a empresa y a viajes  --> LISTO

	  -	puedo hacer algo para que me guarde el usuario y contrase;a en un txt asi puedo consultarlo ya que la contrase;a esta encriptada--> LISTO
	  
	  --comprobar el funcionamiento del if de la clase dataloader en la linea  150 --> LISTO
	  
	  
	  
	  
	  
	  
IDEAS A FUTURO:
	-->buenas , tengo una duda , tengo un backend en springboot con java , hay alguna forma de poder hacer una aplicacion movil que tire contra eso? -->la idea es intentar hacer una aplicacion movil que pueda tirar de esos endpoints
	
	
				
				
				
				
				
				
				
				
				
	
	
	
	
	
					


					
					
					
					
					
					
					
					
					
PROBLEMAS QUE HE TENIDO:
si el backend esta guardando los datos en  la base pero el fronted no lo detecta (ejemplo: lo que me ha pasado con el registro que me lo guardaba en la bbdd pero salia el menaje 
en rojo de Error al registrar usuario) esto es por la respuesta que esta mandando el metodo , esta mandando un string o otra cosa en vez de un json, para corregirlo mete esto en 
el return -> Map.of("mensaje","aqui va el texto que tuvieras")
    -->return ResponseEntity.ok(Map.of("mensaje", "Usuario registrado correctamente"));
	
	
	
	
	
	
	
	
	
	
	
	
	Comandos para angular
	# Borrar carpeta node_modules
	Remove-Item -Recurse -Force .\node_modules

	# Borrar package-lock.json
	Remove-Item -Force .\package-lock.json
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	VISUAL PARA LA PANTALLA DE LAS EMPRESAS
	Flujo recomendado

Listado principal de empresas

Tabla o tarjetas con la informaci√≥n b√°sica: nombre, sector, fecha de creaci√≥n, acciones.

Bot√≥n flotante ‚Äú+‚Äù para crear nueva empresa (no confundir con el resto de botones).

Crear / Editar empresa

Usar un modal (ventana emergente) con un formulario.

Campos principales: nombre, direcci√≥n, sector, etc.

Botones: ‚ÄúGuardar‚Äù y ‚ÄúCancelar‚Äù.

Cuando se guarda, se cierra el modal y se recarga la tabla autom√°ticamente.

Esto evita recargar toda la p√°gina y mantiene el contexto del usuario.

Eliminar empresa

Bot√≥n dentro de cada fila (o tarjeta) con un icono de basura.

Mostrar un confirm dialog para evitar borrados accidentales.

Despu√©s de confirmar, la tabla se actualiza autom√°ticamente.

Feedback visual

Mensajes de √©xito o error con snackbars o alertas peque√±as en la esquina.

Ejemplo: ‚ÄúEmpresa creada correctamente‚Äù o ‚ÄúNo se pudo eliminar la empresa‚Äù.

2Ô∏è‚É£ Dise√±o visual
a) Distribuci√≥n de elementos

Tabla compacta o tarjetas seg√∫n la cantidad de empresas:

Si son pocas (<10), tarjetas con informaci√≥n clave y botones visibles.

Si son muchas, tabla con columnas: Nombre | Sector | Acciones.

Acciones:

Editar ‚Üí icono de l√°piz o bot√≥n azul.

Eliminar ‚Üí icono de basura o bot√≥n rojo.

Crear empresa:

Bot√≥n flotante grande (FAB) en esquina inferior derecha, color destacado (ej: verde o azul).

Opcionalmente un peque√±o tooltip: ‚ÄúCrear nueva empresa‚Äù.

b) Estilo de tabla / tarjetas

Tabla:

Cabeceras con fondo suave, texto centrado.

Alternar filas claras y oscuras para facilitar la lectura.

Botones de acci√≥n alineados a la derecha.

Tarjetas:

Box-shadow ligero, bordes redondeados.

Informaci√≥n breve arriba, acciones abajo.

Mantener colores consistentes con la paleta de la app.

c) Experiencia de usuario (UX)

Modal para crear/editar evita cambiar de p√°gina.

Confirmaciones claras para eliminar.

Feedback inmediato con snackbars.

Botones grandes y claros, con iconos universales (l√°piz, basura, +).

3Ô∏è‚É£ Mi recomendaci√≥n final

Usar tabla si hay muchas empresas, tarjetas si son pocas.

Bot√≥n flotante para crear.

Modal para crear/editar.

Snackbars para feedback.

Confirmaci√≥n para eliminar.

Esto queda visualmente limpio, la l√≥gica es sencilla y escalable, y el usuario entiende r√°pidamente qu√© hacer.
	
	
	
	
	
	
	
	
	
	
	
	üé® 1. Paleta de colores
Uso	Color HEX	Ejemplo de aplicaci√≥n
Color principal	#4CAF50	Botones de acci√≥n principales, enlaces importantes
Color secundario	#2196F3	Botones secundarios, botones de registro, enlaces secundarios
Fondo principal	#f4f6f8	Fondo de toda la web
Fondo de tarjetas / cajas	#ffffff	Formulario, tarjetas de contenido
Texto principal	#333333	Encabezados y textos importantes
Texto secundario	#555555	Labels, subt√≠tulos, textos secundarios
Alertas / errores	#e53935	Mensajes de error

üí° Tip: Con solo 2 colores principales (verde y azul), m√°s neutros (blanco y gris), tu web se ve limpia y armoniosa. No necesitas usar m√°s de 3 colores fuertes.

üî§ 2. Tipograf√≠a

Fuente principal: Poppins o Roboto ‚Üí modernas y legibles.

Tama√±os sugeridos:

T√≠tulos: 20‚Äì28px

Labels: 14‚Äì16px

Texto normal: 14px

Peso:

Negrita para t√≠tulos y botones

Regular para inputs y textos secundarios

üìê 3. Estilo de botones y formularios

Bordes redondeados: border-radius: 5px‚Äì10px

Sombra ligera para cajas y botones: box-shadow: 0px 4px 10px rgba(0,0,0,0.1)

Hover: color un poco m√°s oscuro que el original para dar feedback visual

Espaciado: padding interno de 10px‚Äì15px y margen entre elementos de 10px‚Äì15px

üñº 4. Estructura uniforme

Centrar formularios o contenido principal

Mantener ancho fijo para formularios (250‚Äì350px)

Siempre usar el mismo estilo de labels, inputs y botones

Espacios consistentes: m√°rgenes iguales arriba y abajo entre campos
					